(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{218:function(t,n,s){"use strict";s.r(n);var a=s(0),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"doc-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#doc-file","aria-hidden":"true"}},[t._v("#")]),t._v(" Đọc file")]),t._v(" "),s("p",[t._v("Trong bài này chúng ta sẽ nói về việc đọc dữ liệu từ file. Hãy làm bài này thật cẩn thận và kiểm tra thật kĩ xem có làm đúng theo hướng dẫn không. Làm việc với file cũng là một cách rất dễ dàng để "),s("em",[t._v("xóa sổ toàn bộ công sức của bạn")]),t._v(" nếu như không cẩn thận.")]),t._v(" "),s("p",[t._v("Chúng ta sẽ phải viết 2 file. Một là file script "),s("code",[t._v("ex15.py")]),t._v(" để run, 1 file khác "),s("code",[t._v("ex15_sample.txt")]),t._v(" để lưu dữ liệu. Nội dung của file text như sau:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("This is stuff I typed into a file.\nIt is really cool stuff.\nLots and lots of fun to have in here.\n")])])]),s("p",[t._v("Việc cần làm là mở file này trong code và in ra. Tuy nhiên chúng ta sẽ không "),s("code",[t._v("hard code")]),t._v(" tên "),s("em",[t._v("ex15_sample.txt")]),t._v(' trong code. "Hard coding" có nghĩa là đặt một số thông tin trực tiếp trong source code mà lẽ ra chúng nên được nhập vào từ người dùng dưới dạng string. Điều này là không tốt vì chúng ta có thể sẽ muốn load một file khác sau đó. Cách giải quyết đó là sử dụng '),s("em",[t._v("argv")]),t._v(" hoặc "),s("em",[t._v("input")]),t._v(" để yêu cầu người dùng nhập vào tên file.")]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sys "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" argv\n\nscript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filename "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" argv\n\ntxt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("f\"Here 's your file ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("filename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(':"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Type the filename again:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfile_again "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"> "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntxt_again "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file_again"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txt_again"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Kết quả:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("python3 code/ex15.py assets/ex15_sample.txt\nHere 's your file assets/ex15_sample.txt:\nThis is stuff I typed into a file.\nIt is really cool stuff.\nLots and lots of fun to have in here.\nType the filename again:\n> assets/ex15_sample.txt\nThis is stuff I typed into a file.\nIt is really cool stuff.\nLots and lots of fun to have in here.\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);